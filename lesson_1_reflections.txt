How did viewing a diff between two versions of a file help you see the bug that was introduced?

I did not have to look at all 1000+ lines of code. Just what changed.

This made the typo easier to spot.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You're not making ".old" copies of files or clogging the file with commented-out old code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does

Pros: Commit when it makes sense, can make sure to commit only when code compiles, can provide meaningful description of changes, can commit multiple files
Cons: May forget to commit, if offline, may lose changes

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

VCS's designed for coders probably do multiple files since often need to change multiple files. Most Google Docs are discrete units

How can you use the commands git log and git diff to view the history of files?
Run git log to find the commit you're concerned about. Run git diff between the commit before and that commit to find the changes made.

How might using version control make you more confident to make changes that could break something?
Since you have old versions and can find when a problem was introduced. (And possibly what the problem is)


